"""generate first migration

Revision ID: 05b1b0324ca6
Revises: 
Create Date: 2024-11-29 23:51:47.590649

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.sql import text


# revision identifiers, used by Alembic.
revision: str = '05b1b0324ca6'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # Ensure `statusenum` type exists
    op.execute(
        text("""
        DO $$
        BEGIN
            IF NOT EXISTS (SELECT 1 FROM pg_type WHERE typname = 'statusenum') THEN
                CREATE TYPE statusenum AS ENUM ('PENDING', 'IN_PROGRESS', 'COMPLETED');
            END IF;
        END $$;
        """)
    )

    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('username', sa.String(), nullable=False),
                    sa.Column('email', sa.String(), nullable=False),
                    sa.Column('hashed_password', sa.String(), nullable=False),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('username')
                    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_table('todo_items',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('title', sa.String(), nullable=False),
                    sa.Column('description', sa.Text(), nullable=False),
                    sa.Column('start_date', sa.DateTime(), nullable=True),
                    sa.Column('due_date', sa.DateTime(), nullable=True),
                    sa.Column('priority', sa.Enum('LOW', 'MEDIUM', 'HIGH',
                                                  name='priorityenum', native_enum=False), nullable=False),
                    sa.Column('status', sa.Enum('PENDING', 'IN_PROGRESS',
                                                'COMPLETED', name='statusenum'), nullable=False),
                    sa.Column('tags', sa.String(), nullable=True),
                    sa.Column('category', sa.String(), nullable=False),
                    sa.Column('created_at', sa.DateTime(), nullable=True),
                    sa.Column('updated_at', sa.DateTime(), nullable=True),
                    sa.Column('user_id', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_todo_items_id'),
                    'todo_items', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_todo_items_id'), table_name='todo_items')
    op.drop_table('todo_items')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')

    # Drop `statusenum` type if necessary
    op.execute("DROP TYPE IF EXISTS statusenum;")
    # ### end Alembic commands ###
